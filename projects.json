{
    "greatBear": {
        "title": "The Great Bear",
        "roles": [
            "Design",
            "Level Editing",
            "Scripting",
            "Texture Editing"
        ],
        "technologies": [
            "Skyrim Creation Kit",
            "Papyrus (Javascript)"
        ],
        "download_link": "https://steamcommunity.com/sharedfiles/filedetails/?id=285580543",
        "controller_warning": "",
        "thumbnail_image": "dist/static/images/greatBear/m-selector.jpg",
        "header_image": "dist/static/images/greatBear/m-bigBear.jpg",
        "images": [
            "dist/static/images/greatBear/m-freya.jpg",
            "dist/static/images/greatBear/m-cave.jpg"
        ],
        "duration": "6 months",
        "description": [
            "The Great Bear adds an epic quest to Skyrim. It is a retelling of the Ursa Major creation myth and ",
            "takes the player on a quest through the mountain caves and darkened grottos near Falkreath in search ",
            "of mythical and dangerous beast. Along the way the player will make choices that decide the fate of ",
            "those involved with the creature's plight."
        ],
        "commentary": [
          "The Great Bear quest is probably the project I'm currently most proud of, if only because its been the most ",
          "iterative.  Shortly after I released it to the Steam Workshop, and definitely before ",
          "I was ready, it was featured on the Workshop front-page for a little over 2 weeks. ",
          "<br>",
          "<br>",
          "I immediately got several thousand players and they were vocal about what was working and what wasn't. ",
          "The next several weeks were spent burning through a gigantic backlog of changes and bugs.  I encountered ",
          "things from the incredibly specific and easy to address, such as a leftover console message, all the way to ",
          "gigantic game-breakers, e.g.  dialogue wasn't automatically bundled into the build and didn't work at all.",
          "<br>",
          "<br>",
          "Releasing to, and being featured on, the Steam Workshop was an eye-opening experience in adapting to the ",
          "experiences and desires of a massive audience."
        ]
    },

    "keepItGroovy": {
        "title": "",
        "roles": [
            "Programming"
        ],
        "technologies": [
            "Unity Engine",
            "C#"
        ],
        "download_link": "https://globalgamejam.org/2017/games/keep-it-groovy",
        "controller_warning": "4 Controllers Required",
        "thumbnail_image": "dist/static/images/keepItGroovy/m-selector.jpg",
        "header_image": "dist/static/images/keepItGroovy/m-title.jpg",
        "images": [
            "dist/static/images/keepItGroovy/m-straight.jpg",
            "dist/static/images/keepItGroovy/m-twisted.jpg"
        ],
        "duration": "3 Days",
        "description": [
            "Keep it Groovy is a fast-paced, explicitly multiplayer game.  Two teams compete in two phases. ",
            "In the first phase Team A draws grooves into the track of a record and Team B tries to trace ",
            "those grooves.  In the second phase the roles reverse.  Who ever lasts longest wins/is the grooviest. ",
            "Its a simple concept and a 100% original soundtrack (and effects!), themetically on-point art and ",
            "a hyper-speed competition-fueling gameplay bring it all home."
        ],
        "commentary": [
            "Keep it Groovy is probably the most fun, and the most success, I've had at a game jam.  There were ",
            "a couple clear takeaways:",
            "<br><br>",
            "First, nailing down the concept allowed a diverse team to work well independently. The team didn't ",
            "even work in the same building for a lot of the jam.  At the start, we went through ",
            "a number of ideas before landing on the 70s kitsch vibe.  Once we had it down the entire ",
            "team was able to work on different pieces of the game with the assurance that the final product ",
            "would stay cohesive.",
            "<br><br>",
            "Secondly, we quickly realized that 90% of the design experience happens after the core loop is done. ",
            "In previous jams my teams would wait until we had something that looked decent before we put it in ",
            "front of players.  This time we made our testers suffer through some truly terrible 'programmer-art'. ",
            "And it paid off. We spent more than half of our development time tweaking controls and messaging. ",
            "The game only started looking good in the last few hours of the jam. But it was fun to play well ",
            "before that."
        ]
    },

    "priestSimulator": {
        "title": "Priest Simulator",
        "roles": [
            "Programming"
        ],
        "technologies": [
            "Unity Engine",
            "C#"
        ],
        "download_link": "https://globalgamejam.org/2016/games/rpg-priest-simulator",
        "controller_warning": "",
        "thumbnail_image": "dist/static/images/priestSimulator/m-selector.jpg",
        "header_image": "dist/static/images/priestSimulator/m-title.jpg",
        "images": [
            "dist/static/images/priestSimulator/m-insurance.jpg",
            "dist/static/images/priestSimulator/m-headcrab.jpg"
        ],
        "duration": "3 Days",
        "description": [
            "In RPG Priest Simulator, you're not the hero, you're the guy who who has to deal with the ",
            "heroes.  Play as that enduring RPG role, the village priest.  While you may not get the slay ",
            "the dragons, you'll see the results of other people's attempts and if you're quick, make a ",
            "some cold, hard, gp in the porcess."
        ],
        "commentary": [
            "We may have been tempting fate adding \"Game of the Year Edition\" to the end there.  I wish ",
            "RPG priest simulator came together better than it did.  This was my first in-person jam and ",
            "the entire team was exceptionally strong.",
            "<br><br>",
            "In the end, our core mistake was not nailing down the gameplay loop sooner.  We ended up with a ",
            "ton of excellent code, art, writing, and ideas that never meshed because there was no gameplay ",
            "on which to hang them."
        ]
    },
    
    "dancemission": {
        "title": "",
        "roles": [
            "Programming"
        ],
        "technologies": [
            "Unity Engine",
            "C#"
        ],
        "download_link": "executables/Dancemission.exe",
        "controller_warning": "2 Controllers Required",
        "thumbnail_image": "dist/static/images/dancemission/m-selector.jpg",
        "header_image": "dist/static/images/dancemission/m-main.jpg",
        "images": [
            "dist/static/images/dancemission/m-game.jpg"
        ],
        "duration": "2 Days",
        "description": [
            "Dancemission is a game about keeping the beat and not getting caught. In asymetrical roles, ",
            "one player needs to keep moving, and convert other dancers with his move. Plapyer controls a searchlight ",
            "constantly trying to identify the rogue dancer. The catch, the player-controlled dancer is the only one ",
            "moving to the beat."
        ],
        "commentary": [
            "Dancemission started with the idea of making a rhythm game that wasn't about tapping keys in time ",
            "to the music. We honed that idea into a game about identifying rhythm rather than reacting to it.",
            "<br><br>",
            "In any weekend project immediate iteration is going to create a better game. Dancemission's source ",
            "is littered with feature flag that allowed each tester to play a slightly different game.",
            "Some of these flags were simple diffculty tweaks and others were much larger gameplay tweaks like ",
            "whether or not the 'dancer' player was aware of their own position at the beginning of the game.",
            "<br><br>",
            "Being able to ask testers if they'd like to try a different version of the game let us jump ",
            "quickly into the designer mindset and achieve something that was as fun as functional."
        ]
    },

    "scrollTown": {
        "title": "Scrolltown",
        "roles": [
            "Programming"
        ],
        "technologies": [
            "Unity Engine",
            "C#"
        ],
        "download_link": "",
        "controller_warning": "",
        "thumbnail_image": "dist/static/images/scrolltown/m-selector.jpg",
        "header_image": "dist/static/images/scrolltown/thumbnail.png",
        "images": [
            "dist/static/images/scrolltown/m-scroll1.jpg",
            "dist/static/images/scrolltown/m-scroll2.jpg",
            "dist/static/images/scrolltown/m-scroll3.jpg"
        ],
        "duration": "1 month",
        "raw_content": [
            "<iframe frameBorder=0 scrolling=no src='static/projects/scrolltown_webgl/index.html'>You have really old browser and can't see ",
            "this awesome content!</iframe>"
        ],
        "description": [
            "Scrolltown is a quick project to test basic procedural generation techniques. The town generates ",
            "according to basic rules such as ensuring that city parks only appear in cities, and that mountain ",
            "ranges are contiguous. Additionally, adorable little cars aimlessly navigate the town like busy ",
            "ants. The rules for cars and city generation are easy to tweak to build cities that flow logically."
        ],
        "commentary": [
            "The largest amount of work that went into this project is possibly the least noticeable, the cars. ",
            "Getting each car to be aware of its position in worldspace, and the position of the cars around it ",
            "is not theoretically difficult but very tedious. In general, cars will always prevent crashes and make ",
            "turns whenever necessary. Given that 75%+ of the spawned cars are, at any moment, off-screen, the biggest ",
            "performance tweak was only updating vehicles that are currently on-camera or about to interact with ",
            "on camera vehicles.",
            "<br><br>",
            "In the end, Scrolltown here became a nice little zen world-in-a-box."
        ]
    }

}